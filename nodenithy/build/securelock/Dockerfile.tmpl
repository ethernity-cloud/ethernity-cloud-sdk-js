FROM registry.ethernity.cloud:443/debuggingdelight/ethernity-cloud-sdk-registry/ethernity/node:16.13.1-alpine3.15-scone5.8-production as release

RUN apk update

RUN cd /

RUN apk add bash

ENV SCONE_MODE=SIM
ENV SCONE_HEAP=256M
ENV SCONE_LOG=DEBUG
ENV ENCLAVE_NAME_SECURELOCK=__ENCLAVE_NAME_SECURELOCK__
ENV BUCKET_NAME=__BUCKET_NAME__
ENV SMART_CONTRACT_ADDRESS=__SMART_CONTRACT_ADDRESS__
ENV IMAGE_REGISTRY_ADDRESS=__IMAGE_REGISTRY_ADDRESS__
ENV RPC_URL=__RPC_URL__
ENV CHAIN_ID=__CHAIN_ID__

RUN mkdir binary-fs-dir

COPY ./src /etny-securelock/
COPY scripts/* /etny-securelock/

WORKDIR /etny-securelock
RUN pwd
RUN npm install
RUN ls

WORKDIR /

RUN ["chmod", "+x", "etny-securelock/binary-fs-build.sh"]
RUN etny-securelock/binary-fs-build.sh

FROM registry.ethernity.cloud:443/debuggingdelight/ethernity-cloud-sdk-registry/sconecuratedimages/crosscompilers as build

COPY --from=release /binary-fs-dir /.

RUN scone gcc ./binary_fs_blob.s ./libbinary_fs_template.a -shared -o /libbinary-fs.so

#
FROM registry.ethernity.cloud:443/debuggingdelight/ethernity-cloud-sdk-registry/ethernity/node:16.13.1-alpine3.15-scone5.8-production

COPY --from=build /libbinary-fs.so /lib/libbinary-fs.so
#

RUN apk update

RUN apk add openssl

RUN openssl genrsa -3 -out /enclave-key.pem 3072


ENV SCONE_LOG=info
ENV SCONE_HEAP=1024M
ENV SCONE_ALLOW_DLOPEN=1
ENV SCONE_EXTENSIONS_PATH=/lib/libbinary-fs.so

# Enable production mode for mainnet
# RUN scone-signer sign --key=/enclave-key.pem --env --production /usr/bin/node
RUN rm -rf /enclave-key.pem

#RUN scone cas attest scone-cas.cf 3061b9feb7fa67f3815336a085f629a13f04b0a1667c93b14ff35581dc8271e4 -GCS --only_for_testing-debug --only_for_testing-ignore-signer
RUN ls /usr/local/bin
ENTRYPOINT ["/usr/local/bin/node", "/etny-securelock/securelock.js"]
